{
  "uid" : "b03391a9a15dfc4c",
  "name" : "test_add[鍔犳硶娴嬭瘯1]",
  "fullName" : "test_cal.TestCalculator#test_add",
  "historyId" : "df85bc2a50f1a291e769d05f8292baa9",
  "time" : {
    "start" : 1615726256649,
    "stop" : 1615726256647,
    "duration" : -2
  },
  "status" : "failed",
  "statusMessage" : "pytest_assume.plugin.FailedAssumption: \n1 Failed Assumptions:\n\ntest_cal.py:50: AssumptionFailure\n>>\tpytest.assume(result == exc)\nAssertionError: assert False",
  "statusTrace" : "tp = <class 'pytest_assume.plugin.FailedAssumption'>, value = None, tb = None\n\n    def reraise(tp, value, tb=None):\n        try:\n            if value is None:\n                value = tp()\n            if value.__traceback__ is not tb:\n>               raise value.with_traceback(tb)\nE               pytest_assume.plugin.FailedAssumption: \nE               1 Failed Assumptions:\nE               \nE               test_cal.py:50: AssumptionFailure\nE               >>\tpytest.assume(result == exc)\nE               AssertionError: assert False\n\nc:\\users\\fdd\\envs\\pytest\\lib\\site-packages\\six.py:702: FailedAssumption",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "xunit_setup_class_fixture_TestCalculator",
    "time" : {
      "start" : 1615726256576,
      "stop" : 1615726256576,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "xunit_setup_class_fixture_TestCalculator::0",
    "time" : {
      "start" : 1615726260798,
      "stop" : 1615726260799,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "run(order=1)"
  }, {
    "name" : "tag",
    "value" : "flaky(reruns=2, reruns_delay=1)"
  }, {
    "name" : "suite",
    "value" : "test_cal"
  }, {
    "name" : "subSuite",
    "value" : "TestCalculator"
  }, {
    "name" : "host",
    "value" : "FDD-PZSTWIEXCFJ"
  }, {
    "name" : "thread",
    "value" : "2028-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_cal"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "a",
    "value" : "2"
  }, {
    "name" : "b",
    "value" : "3"
  }, {
    "name" : "exc",
    "value" : "4"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "run(order=1)", "flaky(reruns=2, reruns_delay=1)" ]
  },
  "source" : "b03391a9a15dfc4c.json",
  "parameterValues" : [ "2", "3", "4" ]
}